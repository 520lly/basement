inherit: [libtool, make, stddef]

buildTools: [target-toolchain]
buildVars: [AUTOCONF_BUILD, AUTOCONF_HOST]
buildScript: |
    _AUTOTOOLS_DEP_PATHS=( "$@" )

    # $1 : source path
    autotoolsBuild()
    {
        local i lib_postfix CPPFLAGS="${CPPFLAGS:+$CPPFLAGS}" LDFLAGS="${LDFLAGS:+$LDFLAGS}" PKG_CONFIG_PATH
        local MAKE_TARGET=
        local MAKE_OPTIONS=( )
        local INSTALL_TAGET=install
        local INSTALL_OPTIONS=( )

        # parse arguments
        OPTIND=1
        local opt
        while getopts "i:m:o:O:s" opt ; do
            case "$opt" in
                i)
                    INSTALL_TAGET="$OPTARG"
                    ;;
                m)
                    MAKE_TARGET="$OPTARG"
                    ;;
                o)
                    MAKE_OPTIONS+=( "$OPTARG" )
                    ;;
                O)
                    INSTALL_OPTIONS+=( "$OPTARG" )
                    ;;
                \?)
                  echo "Invalid option: -$OPTARG" >&2
                  exit 1
                  ;;
            esac
        done
        shift $(( OPTIND -1 ))

        # Gather all include and library paths.
        for i in "${_AUTOTOOLS_DEP_PATHS[@]:1}" ; do
            if [[ -d "$i/usr/include" ]] ; then CPPFLAGS+=" -I$i/usr/include" ; fi
            for j in lib usr/lib lib/$STDDEF_HOST_MULTIARCH usr/lib/$STDDEF_HOST_MULTIARCH ; do
                if [[ -d "$i/$j" ]] ; then
                    LDFLAGS+=" -L$i/$j"
                    if compgen -G "$i/$j/*.so" >/dev/null ; then
                        LDFLAGS+=" -Wl,-rpath-link=$i/$j"
                    fi
                fi
            done
            if [[ -d "$i/usr/lib/$STDDEF_HOST_MULTIARCH/pkgconfig" ]] ; then
                PKG_CONFIG_PATH="${PKG_CONFIG_PATH:+${PKG_CONFIG_PATH}:}$i/usr/lib/$STDDEF_HOST_MULTIARCH/pkgconfig"
            fi
        done
        [ -z "${CPPFLAGS:+true}" ] || export CPPFLAGS
        [ -z "${LDFLAGS:+true}" ] || export LDFLAGS
        [ -z "${PKG_CONFIG_PATH:+true}" ] || export PKG_CONFIG_PATH

        mkdir -p build install
        pushd build
        $1/configure \
            ${AUTOCONF_BUILD:+--build=${AUTOCONF_BUILD}} \
            ${AUTOCONF_HOST:+--host=${AUTOCONF_HOST}} \
            ${AUTOCONF_TARGET:+--target=${AUTOCONF_TARGET}} \
            --prefix="/usr" \
            --sysconfdir="/etc" \
            --localstatedir="/var" \
            --libdir=/usr/lib/$STDDEF_HOST_MULTIARCH \
            "${@:2}"
        makeParallel $MAKE_TARGET ${MAKE_OPTIONS:+"${MAKE_OPTIONS[@]}"}
        make $INSTALL_TAGET DESTDIR=${PWD}/../install ${INSTALL_OPTIONS:+"${INSTALL_OPTIONS[@]}"}
        popd
    }

packageScript: |
    _AUTOTOOLS_BUILD_PATH=$1

    autotoolsPackageDev()
    {
        cp -a $_AUTOTOOLS_BUILD_PATH/install/* .
        stddefCleanupDev
    }

    autotoolsPackageTgt()
    {
        cp -a $_AUTOTOOLS_BUILD_PATH/install/* .
        stddefCleanupTgt
    }
